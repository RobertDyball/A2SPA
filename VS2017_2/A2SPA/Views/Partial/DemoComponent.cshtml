@{
    ViewData["Title"] = "A2SPA is built using the following:";
}
<h2>@ViewData["Title"]</h2>
<h3>@ViewData["Message"]</h3>

<div class="row">
    <p><br /></p>
</div>

<div class="card-columns">
    <div class="card border-dark">
        <div class="card-header">
            <h3 class="card-title">Angular 5</h3>
        </div>
        <div class="card-body text-dark">
            <h6 class="card-title">Client-side Single Page Application framework built on Angular 5.x and Typescript 2.x</h6>
            <p class="card-text">

            </p>
        </div>
    </div>


    <div class="card border-dark p-3">
        <div class="card-header">
            <h3 class="card-title">Styled with <a href="https://getbootstrap.com/docs/4.0/getting-started/introduction/">Bootstrap 4</a>, Angular<br/>
            integration with <a href="https://valor-software.com/ngx-bootstrap/#/">ngx-bootstrap</a>.</h3>
        </div>
        <div class="card-body text-dark">
            <p class="card-text">
                <span>
                    <rating [(ngModel)]="rate" [max]="max" [readonly]="isReadonly"></rating>
                    <pre class="card-block card-header" style="margin:15px 0;">Rate: <b>{{rate}}</b> </pre>
                </span>
            </p>
        </div>
    </div>

    <div class="card border-dark">
        <div class="card-header">
            <h3 class="card-title"><a href="https://github.com/scttcper/ngx-toastr">ngx-toastr</a></h3>
        </div>
        <div class="card-body text-dark">
            <h6 class="card-title">Popup 'Toasts' using <a href="https://github.com/scttcper/ngx-toastr">ngx-toastr</a>.</h6>
            <p class="card-text">
                <button (click)="showSuccess()" class="btn btn-primary">Open Toast</button>
            </p>
        </div>
    </div>

    <div class="card border-dark">
        <div class="card-body">
            <h4 class="card-title">Moment.js</h4>
            <p class="card-text">Easy access to moment.js to handle all of your date, time and duration conversions.</p>
            <p class="card-text"><small class="text-muted"> </small></p>
        </div>
    </div>

    <div class="card border-dark bg-primary text-white text-center p-3">
        <div class="card-header">
            <h3 class="card-title">ASP.Net Core 2 MVC</h3>
        </div>
        <div class="card-body text-white">
            <h6 class="card-title">Built using ASP.Net Core 2.x MVC</h6>
            <p class="card-text">
                Use EF Core Code First and model driven development to accelerate your code; creating common blocks of client-side HTML and Angular markup from server side Tag Helpers.
            </p>
        </div>
    </div>

    <div class="card border-dark">
        <div class="card-header">
            <h3 class="card-title">Swagger docs</h3>
        </div>
        <div class="card-body text-dark">
            <h6 class="card-title">Swagger style API documentation generated dynamically using NSwag.</h6>
            <p class="card-text">
                NSwag's toolset also dynamically generates, or re-generates, Angular5 / Typescript data model + data services from your API.
            </p>
        </div>
    </div>


    <div class="card border-dark text-center">
        <div class="card-header">
            <h3 class="card-title"><a href="https://octicons.github.com/">Octicons</a> and <a href="https://material.io/icons/">Material Icons</a></h3>
        </div>
        <div class="card-body text-dark">
            <h6 class="card-title">Support for <a href="https://octicons.github.com/">Octicons</a>, a scalable set of handcrafted SVG icons</h6>
            <p class="card-text">
                <span class="col-xs-3">
                    <svg version="1.1" width="32" height="32" viewBox="0 0 16 16" class="octicon octicon-clippy" aria-hidden="true">
                        <image xlink:href="/node_modules/octicons/build/svg/clippy.svg" />
                    </svg>
                </span>
                <span class="col-xs-3">
                    <svg version="1.1" width="32" height="32" viewBox="0 0 16 16" class="octicon octicon-mail" aria-hidden="true">
                        <image xlink:href="/node_modules/octicons/build/svg/mail.svg" />
                    </svg>
                </span>
                <span class="col-xs-3">
                    <svg version="1.1" width="32" height="32" viewBox="0 0 16 16" class="octicon octicon-mail-read" aria-hidden="true">
                        <image xlink:href="/node_modules/octicons/build/svg/mail-read.svg" />
                    </svg>
                </span>
                <span class="col-xs-3">
                    <svg version="1.1" width="32" height="32" viewBox="0 0 16 16" class="octicon octicon-location" aria-hidden="true">
                        <image xlink:href="/node_modules/octicons/build/svg/location.svg" />
                    </svg>
                </span>
            </p>
        </div>
        <div class="card-body text-dark">
            <h6 class="card-title">and for <a href="https://google.github.io/material-design-icons/">Material Design Icons and Fonts</a></h6>
            <p class="card-text">
                <span class="col-sm-3">18px <i class="material-icons md-18">face</i></span>
                <span class="col-sm-3">24px <i class="material-icons md-24">face</i></span>
                <span class="col-sm-3">36px <i class="material-icons md-36">face</i></span>
                <span class="col-sm-3">48px <i class="material-icons md-48">face</i></span>
            </p>
        </div>
    </div>



    <div class="card border-dark p-3">
        <div class="card-header">
            <h3 class="card-title">OpenId Token auth</h3>
        </div>
        <div class="card-body text-dark">
            <h6 class="card-title">OpenID authentication and authorization using tokens generated by OpenIDDict</h6>
            <p class="card-text">
                OpenIddict provides a simple, easy-to-use OpenID Connect server.<br />
                It is based on AspNet.Security.OpenIdConnect.Server (codenamed ASOS) to control the OpenID Connect authentication flow and used in A2SPA with the including ASP.NET Core Identity membership stack.<br />
                OpenIddict fully supports client credentials/resource owner password grants to generate and validate JSON Web Tokens (JWT) for a cookieless user experience.
            </p>
        </div>
    </div>


    <div class="card border-dark" style="height:500px!important">
        <div class="card-header">
            <h4 class="card-title"><a href="https://github.com/gevgeny/angular2-highcharts">Angular Highcharts</a> = <a href="https://www.highcharts.com/">Highcharts</a> + <a href="https://angular.io/">Angular 5</a></h4>
        </div>
        <div class="card-body text-dark">
            <p class="card-text" style="height:200px">
                <chart style="width:100px;height:100px;margin:0px!important;padding:0px!important" [options]="options"></chart>
            </p>
        </div>
    </div>

</div>
